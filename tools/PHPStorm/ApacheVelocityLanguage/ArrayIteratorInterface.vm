<?php
declare(strict_types=1);

#if (${NAMESPACE})

namespace ${NAMESPACE};

#end

use ${ItemInterfaceNamespace};

interface ${NAME} extends \SeekableIterator, \ArrayAccess, \Serializable, \Countable
{
     /** @param \\${ItemInterfaceNamespace}...${DS}${arrayItemName}s */
    public function __construct(array ${DS}${arrayItemName}s = array(), int ${DS}flags = 0);

    public function offsetGet(${DS}index): \\${ItemInterfaceNamespace};

    /** @param \\${ItemInterfaceNamespace} ${DS}${arrayItemName} */
    public function offsetSet(${DS}index, ${DS}${arrayItemName});

    /** @param \\${ItemInterfaceNamespace}${DS}${arrayItemName} */
    public function append(${DS}${arrayItemName});

    public function current(): \\${ItemInterfaceNamespace};
}